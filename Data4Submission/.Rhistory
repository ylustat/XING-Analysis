size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5),
size = 0.3)
pdf(file = "/Users/luyihao/Downloads/cis.heatmap.tissue.pdf",width=9,height=8)
gg1
dev.off()
load("/Users/luyihao/Downloads/ciseQTL.RData")
colnames(result) <- str_replace_all(colnames(result),"_"," ")
colnames(result)[colnames(result) == "Triglyceride levels x alcohol consumption  regular vs non-regular drinkers  interaction  2df "] <- "Triglyceride levels"
colnames(result)[colnames(result) == "Risk-taking tendency  4-domain principal component model "] <- "Risk-taking tendency"
colnames(result)[colnames(result) == "White matter microstructure  fractional anisotropy "] <- "White matter microstructure (fractional anisotropy)"
colnames(result)[colnames(result) == "White matter microstructure  mean diusivities "] <- "White matter microstructure (mean diusivities)"
colnames(result)[colnames(result) == "Alzheimers disease"] <- "Alzheimer's disease"
colnames(result)[colnames(result) == "Parkinsons disease"] <- "Parkinson's disease"
colnames(result)[colnames(result) == "Cortical surface area MOSTest"] <- "Cortical surface area"
colnames(result)[colnames(result) == "General risk tolerance  MTAG "] <- "General risk tolerance"
colnames(result)[colnames(result) == "Menarche  age at onset "] <-"Menarche age at onset"
colnames(result)[colnames(result) == "Educational attainment  MTAG "] <-"Educational attainment"
colnames(result)[colnames(result) == "Total testosterone levels"] <-"Testosterone levels"
result <- result[,intersect(rownames(trans_result_order),colnames(result))]
save(result, file = "/Users/luyihao/Downloads/enrichmentcisasso.RData")
library(ggplot2)
library(tidyverse)
library(data.table)
library(ComplexHeatmap)
library(circlize)
library(RColorBrewer)
library(dendextend)
# trans-eQTL
load("/Users/luyihao/Downloads/XING_NG/after_SSGG/APP1_QTL_analysis/result1e-06.RData")
load("/Users/luyihao/Downloads/enrichmenttransasso.RData")
result_order <- apply(result,2,function(x) as.numeric(cut(length(x) - rank(x) + 1,breaks=c(0,1,28))))
result_order2 <- apply(result,2,function(x) as.numeric(cut(length(x) - rank(x) + 1,breaks=c(0,1,2,28))))
result_order3 <- apply(result,2,function(x) as.numeric(cut(length(x) - rank(x) + 1,breaks=c(0,2,3,28))))
rownames(result_order) <- rownames(result_order2) <-
rownames(result_order3) <- rownames(result)
colnames(result_order) <- colnames(result_order2) <-
colnames(result_order3) <- colnames(result)
result_order <- t(result_order)
result_order2 <- t(result_order2)
result_order3 <- t(result_order3)
rownames(result_order) <-
paste0(1:length(rownames(result_order)),": ",rownames(result_order))
row_dend = hclust(dist(result_order))
col_dend = hclust(dist(t(result_order)))
mycols <- colorRamp2(breaks = c(1, 2),
colors = c("red", "white"))
h1 <- Heatmap(result_order,
name = "order",
row_names_gp = gpar(fontsize = 7),
rect_gp = gpar(col = "grey"),
cluster_rows = row_dend,
col = mycols)
result_order <- result_order[row_order(h1),column_order(h1)]
colOrder <- order(apply(result_order,2,function(x) ifelse(length(which(x==1))==0,100,which(x==1))))
h2 <- Heatmap(result_order,
name = "order",
row_names_gp = gpar(fontsize = 7),
rect_gp = gpar(col = "grey"),
col = mycols,cluster_rows = F,cluster_columns = F,
column_order = colOrder)
result <- result[,row_order(h1)]
result <- result[column_order(h1),][column_order(h2),]
result_order <- result_order[,rownames(result)]
################################################
result <- result[order(rownames(result)),]
result <- t(result)
result_order <- result_order[,order(colnames(result_order))]
result_order <- result_order %>% as.data.frame() %>%
arrange_all()
rownames(result_order) <- rownames(result_order) %>%
str_split(": ") %>%
sapply(function(x) x[2])
result <- result[rownames(result_order),]
result <- as.matrix(result)
result_order <- as.matrix(result_order)
result_tmp <- result
tissue.names <- read.csv("/Users/luyihao/Downloads/tissue_used.csv")
colnames(result_tmp) <- tissue.names$Tissue
result_order <- result_order[rownames(result),colnames(result)]
result_order2 <- result_order2[rownames(result),colnames(result)]
result_order3 <- result_order3[rownames(result),colnames(result)]
result_order_melt <- melt(result_order) %>% filter(value == 1)
result_order_melt2 <- melt(result_order2) %>% filter(value == 2)
result_order_melt3 <- melt(result_order3) %>% filter(value == 2)
result_tmp_melt <- melt(t(result_tmp))
colnames(result_tmp_melt)[1:2] <- c("Tissue","Trait/Disease")
gg1 <- result_tmp_melt %>%
ggplot() +
geom_tile(aes(y=`Trait/Disease`,x=Tissue,
fill=value),
col="grey")+
scale_fill_gradient2(low="#4575B4", high="#D73027",
limit = c(-6,6),breaks=c(-4,0,4),
name="Scaled proportions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),text = element_text(size=10)) +
labs(y = "Trait/Disease") +
geom_rect(data = result_order_melt2, fill = NA, col = "black",linetype="dotted",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5)) +
geom_rect(data = result_order_melt, fill = NA, col = "black",
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5)) +
geom_rect(data = result_order_melt3, fill = NA, col = "black", linetype="dotted",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5))
pdf(file = "/Users/luyihao/Downloads/trans.heatmap.tissue.pdf",width=9,height=8)
gg1
dev.off()
trans_result_order <- result_order
trans_result_tmp <- result_tmp
########################################################################
# cis-eQTL
load("/Users/luyihao/Downloads/enrichmentcisasso.RData")
result_order <- apply(result,2,function(x) as.numeric(cut(length(x) - rank(x) + 1,breaks=c(0,1,28))))
rownames(result_order) <- rownames(result)
colnames(result_order) <- colnames(result)
result_order <- t(result_order)
rownames(result_order) <- paste0(1:length(rownames(result_order)),": ",rownames(result_order))
result <- t(result)
result_tmp <- result
rownames(result_order) <- rownames(result_order) %>%
str_split(": ") %>%
sapply(function(x) x[2])
colnames(result_order)[colnames(result_order) == "Brain Spinal cord cervical c-1"] <-
colnames(result_tmp)[colnames(result_tmp) == "Brain Spinal cord cervical c-1"] <-
"Brain Spinal cord cervical c.1"
result_order <- result_order[rownames(trans_result_order),colnames(colnames(trans_result_tmp))]
colnames(result_tmp) <- tissue.names$Tissue
result_tmp <- result_tmp[rownames(trans_result_tmp),colnames(trans_result_tmp)]
result_order_melt <- melt(result_order) %>% filter(value == 1)
result_tmp_melt <- melt(t(result_tmp))
trans_result_order_melt <- melt(trans_result_order) %>% filter(value == 1)
colnames(result_tmp_melt)[1:2] <- c("Tissue","Trait/Disease")
gg1 <- result_tmp_melt  %>% ggplot() +
geom_tile(aes(y=`Trait/Disease`,x=Tissue, fill=value),col="grey")+
scale_fill_gradient2(low="#4575B4", high="#D73027",
limit = c(-6,6),breaks=c(-4,0,4),
name="Scaled proportions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
text = element_text(size=10)) +
labs(y = "Trait/Disease") +
geom_rect(data = result_order_melt2, fill = NA, col = "black",linetype="dotted",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5)) +
geom_rect(data = result_order_melt3, fill = NA, col = "black",linetype="dotted",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5)) +
geom_rect(data = trans_result_order_melt, fill = NA, col = "black",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5),
size = 0.3)
pdf(file = "/Users/luyihao/Downloads/cis.heatmap.tissue.pdf",width=9,height=8)
gg1
dev.off()
setwd("/Users/luyihao/Downloads/XING_revision_r3/Data")
library(ggplot2)
library(tidyverse)
library(data.table)
library(ComplexHeatmap)
library(circlize)
library(RColorBrewer)
library(dendextend)
tissue.names <- read.csv("tissue_used.csv")
setwd("/Users/luyihao/Downloads/XING_revision_r3/Data4Submission")
library(ggplot2)
library(tidyverse)
library(data.table)
library(ComplexHeatmap)
library(circlize)
library(RColorBrewer)
library(dendextend)
tissue.names <- read.csv("tissue_used.csv")
########################################################################
############################## trans-association #########################
########################################################################
load("enrichmenttransasso.RData")
result_order <- apply(result,2,function(x) as.numeric(cut(length(x) - rank(x) + 1,breaks=c(0,1,28))))
result_order2 <- apply(result,2,function(x) as.numeric(cut(length(x) - rank(x) + 1,breaks=c(0,1,2,28))))
result_order3 <- apply(result,2,function(x) as.numeric(cut(length(x) - rank(x) + 1,breaks=c(0,2,3,28))))
rownames(result_order) <- rownames(result_order2) <-
rownames(result_order3) <- rownames(result)
colnames(result_order) <- colnames(result_order2) <-
colnames(result_order3) <- colnames(result)
result_order <- t(result_order)
result_order2 <- t(result_order2)
result_order3 <- t(result_order3)
rownames(result_order) <-
paste0(1:length(rownames(result_order)),": ",rownames(result_order))
row_dend = hclust(dist(result_order))
col_dend = hclust(dist(t(result_order)))
mycols <- colorRamp2(breaks = c(1, 2),
colors = c("red", "white"))
h1 <- Heatmap(result_order,
name = "order",
row_names_gp = gpar(fontsize = 7),
rect_gp = gpar(col = "grey"),
cluster_rows = row_dend,
col = mycols)
result_order <- result_order[row_order(h1),column_order(h1)]
colOrder <- order(apply(result_order,2,function(x) ifelse(length(which(x==1))==0,100,which(x==1))))
h2 <- Heatmap(result_order,
name = "order",
row_names_gp = gpar(fontsize = 7),
rect_gp = gpar(col = "grey"),
col = mycols,cluster_rows = F,cluster_columns = F,
column_order = colOrder)
result <- result[,row_order(h1)]
result <- result[column_order(h1),][column_order(h2),]
result_order <- result_order[,rownames(result)]
################################################
result <- result[order(rownames(result)),]
result <- t(result)
result_order <- result_order[,order(colnames(result_order))]
result_order <- result_order %>% as.data.frame() %>%
arrange_all()
rownames(result_order) <- rownames(result_order) %>%
str_split(": ") %>%
sapply(function(x) x[2])
result <- result[rownames(result_order),]
result <- as.matrix(result)
result_order <- as.matrix(result_order)
result_tmp <- result
colnames(result_tmp) <- tissue.names$Tissue
result_order <- result_order[rownames(result),colnames(result)]
result_order2 <- result_order2[rownames(result),colnames(result)]
result_order3 <- result_order3[rownames(result),colnames(result)]
result_order_melt <- melt(result_order) %>% filter(value == 1)
result_order_melt2 <- melt(result_order2) %>% filter(value == 2)
result_order_melt3 <- melt(result_order3) %>% filter(value == 2)
result_tmp_melt <- melt(t(result_tmp))
colnames(result_tmp_melt)[1:2] <- c("Tissue","Trait/Disease")
gg1 <- result_tmp_melt %>%
ggplot() +
geom_tile(aes(y=`Trait/Disease`,x=Tissue,
fill=value),
col="grey")+
scale_fill_gradient2(low="#4575B4", high="#D73027",
limit = c(-6,6),breaks=c(-4,0,4),
name="Scaled proportions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),text = element_text(size=10)) +
labs(y = "Trait/Disease") +
geom_rect(data = result_order_melt2, fill = NA, col = "black",linetype="dotted",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5)) +
geom_rect(data = result_order_melt, fill = NA, col = "black",
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5)) +
geom_rect(data = result_order_melt3, fill = NA, col = "black", linetype="dotted",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5))
gg1
trans_result_order <- result_order
trans_result_tmp <- result_tmp
########################################################################
############################## cis-association #########################
########################################################################
load("/Users/luyihao/Downloads/enrichmentcisasso.RData")
result_order <- apply(result,2,function(x) as.numeric(cut(length(x) - rank(x) + 1,breaks=c(0,1,28))))
rownames(result_order) <- rownames(result)
colnames(result_order) <- colnames(result)
result_order <- t(result_order)
rownames(result_order) <- paste0(1:length(rownames(result_order)),": ",rownames(result_order))
result <- t(result)
result_tmp <- result
rownames(result_order) <- rownames(result_order) %>%
str_split(": ") %>%
sapply(function(x) x[2])
colnames(result_order)[colnames(result_order) == "Brain Spinal cord cervical c-1"] <-
colnames(result_tmp)[colnames(result_tmp) == "Brain Spinal cord cervical c-1"] <-
"Brain Spinal cord cervical c.1"
result_order <- result_order[rownames(trans_result_order),colnames(colnames(trans_result_tmp))]
colnames(result_tmp) <- tissue.names$Tissue
result_tmp <- result_tmp[rownames(trans_result_tmp),colnames(trans_result_tmp)]
result_order_melt <- melt(result_order) %>% filter(value == 1)
result_tmp_melt <- melt(t(result_tmp))
trans_result_order_melt <- melt(trans_result_order) %>% filter(value == 1)
colnames(result_tmp_melt)[1:2] <- c("Tissue","Trait/Disease")
gg1 <- result_tmp_melt  %>% ggplot() +
geom_tile(aes(y=`Trait/Disease`,x=Tissue, fill=value),col="grey")+
scale_fill_gradient2(low="#4575B4", high="#D73027",
limit = c(-6,6),breaks=c(-4,0,4),
name="Scaled proportions")+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
text = element_text(size=10)) +
labs(y = "Trait/Disease") +
geom_rect(data = result_order_melt2, fill = NA, col = "black",linetype="dotted",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5)) +
geom_rect(data = result_order_melt3, fill = NA, col = "black",linetype="dotted",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5)) +
geom_rect(data = trans_result_order_melt, fill = NA, col = "black",
size = 0.4,
aes(xmin = as.numeric(Var2) - 0.5, ymin = as.numeric(Var1) - 0.5,
xmax = as.numeric(Var2) + 0.5, ymax = as.numeric(Var1) + 0.5),
size = 0.3)
gg1
setwd("/Users/luyihao/Downloads/XING_revision_r3/Data4Submission/ResultFigureS8.txt")
fread("/Users/luyihao/Downloads/XING_revision_r3/Data4Submission/ResultFigureS8.txt")
res <- fread("/Users/luyihao/Downloads/XING_revision_r3/Data4Submission/ResultFigureS8.txt")
res %>%
ggplot(aes(x = ld, y = ., col = factor(theta), fill = factor(theta)))+
geom_line(size = 2)+geom_point()+
geom_point(size=6,pch=21,col="black",stroke=0.5)+
scale_fill_manual(values = brewer.pal(4,"Set2"), labels = c(0.01,0.05,0.15,0.25))+
scale_color_manual(values = brewer.pal(4,"Set2"), labels = c(0.01,0.05,0.15,0.25))+
theme_classic() +
labs(x = "Pairwise correlation among SNPs within the same block", y = "AUC", col = expression(theta["\u2113"]), fill = expression(theta["\u2113"]))+
theme(
text = element_text(size = 25),
legend.position = c(0.95, 0.95),
legend.justification = c(1, 1),
legend.background = element_rect(color = "black", size = 0.5),
legend.key = element_blank()
)+
scale_y_continuous(limits = c(0.5,0.85))
# LOCAL
library(data.table)
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
setwd("/Users/luyihao/Downloads/XING_NG/after_SSGG/simulation")
# sample size
# dimension
load("result.dimension.RData")
#==================================================================#
#==================== codes to reproduce figures ==================#
#==================================================================#
library(ggplot2)
library(tidyverse)
library(data.table)
setwd("/Users/luyihao/Downloads/XING_revision_r3/Data4Submission")
# Figure S1
df <- fread("ResultFigureS1.txt")
df %>%
pivot_longer(cols = ALG4:metasoft,names_to = "method",values_to = "probability") %>%
mutate(method = factor(method, levels=c("ALG4","ALG2","mash","hteqtl","ALG1","metasoft"))) %>%
mutate(method = factor(method),
line_type=factor(as.integer(method)%%2)) %>%
ggplot() +
geom_roc(aes(d = as.integer(truevalue), m = probability,
color = method),size = 0.4, labels = F,n.cuts = 10) +
labs(x = "False Positive Rate",
y = "True Positive Rate") + theme_classic()+
scale_color_manual(values=c("red","orange","purple","skyblue","pink","black"),
labels = c(expression('X-ING'),expression('X-ING'[single-omics]),
'mash','MT-eQTL',expression('X-ING'[starting]),'Metasoft'),
name="Method")+
xlim(0,0.2)+
theme(legend.text.align = 0)+
scale_y_continuous(breaks = seq(0,1, by = 0.2))
# Figure S2
df <- fread("ResultFigureS2.txt")
df %>%
pivot_longer(cols = ALG4:metasoft,names_to = "method",values_to = "probability") %>%
mutate(method = factor(method, levels=c("ALG4","ALG2","mash","hteqtl","ALG1","metasoft"))) %>%
mutate(method = factor(method),
line_type=factor(as.integer(method)%%2)) %>%
ggplot() +
geom_roc(aes(d = as.integer(truevalue), m = probability,
color = method),size = 0.4, labels = F,n.cuts = 10) +
labs(x = "False Positive Rate",
y = "True Positive Rate") + theme_classic()+
scale_color_manual(values=c("red","orange","purple","skyblue","pink","black"),
labels = c(expression('X-ING'),expression('X-ING'[single-omics]),
'mash','MT-eQTL',expression('X-ING'[starting]),'Metasoft'),
name="Method")+
xlim(0,0.2)+
theme(legend.text.align = 0)+
scale_y_continuous(breaks = seq(0,1, by = 0.2), limits = c(0,0.9))
# Figure S3
load("ResultFigureS3.txt")
df <- fread("ResultFigureS3.txt")
df %>%
filter(Data == "Data1") %>%
mutate(k2=k21+k22) %>%
dplyr::select(k2, `X-ING`:mash) %>%
pivot_longer(cols = `X-ING`:mash,names_to = "Method") %>%
mutate(Method = factor(Method, levels = c("X-ING","mash")),
line_type=factor(as.integer(Method)%%2)) %>%
ggplot(aes(x = k2, y = value, group = Method,col=Method,shape=Method,linetype=Method))+
geom_point()+geom_line()+
theme_classic()+
labs(x = "Dimension of data A",y = "AUC of data B")+
scale_color_manual(values=c("red","purple"),
name="Method")
df %>%
filter(Data == "Data2") %>%
mutate(k2=k21+k22) %>%
dplyr::select(k2, `X-ING`:mash) %>%
pivot_longer(cols = `X-ING`:mash,names_to = "Method") %>%
mutate(Method = factor(Method, levels = c("X-ING","mash")),
line_type=factor(as.integer(Method)%%2)) %>%
ggplot(aes(x = k2, y = value, group = Method,col=Method,shape=Method,linetype=Method))+
geom_point()+geom_line()+
theme_classic()+
labs(x = "Dimension of data A",y = "AUC of data A")+
scale_color_manual(values=c("red","purple"),
name="Method")
# Figure S4a
df <- fread("ResultFigureS4a.txt")
df %>%
pivot_longer(ALG1:hteqtl) %>%
mutate(name = factor(name, levels=c("ALG4","ALG2","mash","hteqtl","ALG1","metasoft"))) %>%
ggplot(aes(x = h2, y = value, col = name))+
geom_point()+
geom_line()+
theme_classic()+
labs(x = "Percentage of variance explained by\nsimulated predictors (unstructured effects)",y = "AUC")+
scale_color_manual(values=c("red","orange","purple","skyblue","pink","black"),
labels = c(expression('X-ING'),expression('X-ING'[single-omics]),
'mash','MT-eQTL',expression('X-ING'[starting]),'Metasoft'),
name="Method")+
theme(legend.text.align = 0)+
scale_y_continuous(limits = c(0.67,0.93))
# Figure S4b
df <- fread("ResultFigureS4b.txt")
df %>%
pivot_longer(ALG1:hteqtl) %>%
mutate(name = factor(name, levels=c("ALG4","ALG2","mash","hteqtl","ALG1","metasoft"))) %>%
ggplot(aes(x = h2, y = value, col = name))+
geom_point()+
geom_line()+
theme_classic()+
labs(x = "Percentage of variance explained by\nsimulated predictors (structured effects)",y = "AUC")+
scale_color_manual(values=c("red","orange","purple","skyblue","pink","black"),
labels = c(expression('X-ING'),expression('X-ING'[single-omics]),
'mash','MT-eQTL',expression('X-ING'[starting]),'Metasoft'),
name="Method")+
theme(legend.text.align = 0)+
scale_y_continuous(limits = c(0.67,0.93))
# Figure S4c
df <- fread("ResultFigureS4c.txt")
df %>%
pivot_longer(ALG1:hteqtl) %>%
mutate(name = factor(name, levels=c("ALG4","ALG2","mash","hteqtl","ALG1","metasoft"))) %>%
ggplot(aes(x = h_second, y = value, col = name))+
geom_point()+
geom_line()+
theme_classic()+
labs(x = "Percentage of variance explained by simulated\npredictors for the second group of contexts",y = "AUC")+
scale_color_manual(values=c("red","orange","purple","skyblue","pink","black"),
labels = c(expression('X-ING'),expression('X-ING'[single-omics]),
'mash','MT-eQTL',expression('X-ING'[starting]),'Metasoft'),
name="Method")+
theme(legend.text.align = 0)+
scale_y_continuous(limits = c(0.7,0.9))+
scale_x_continuous(breaks = seq(0.05,0.3,0.05))
# Figure S5
df <- fread("ResultFigureS5.txt")
df %>%
pivot_longer(cols = `X-ING`:mash, names_to = "method") %>%
mutate(method=factor(method,levels = c("X-ING","mash"))) %>%
ggplot() +
geom_col(aes(x = R2, y = value, group = method, fill = method),
position = "dodge",alpha=0.5,col="black",width=0.6) + # ,width=0.06
theme_classic() +
scale_fill_manual(values=c("red","purple"),name="Method") +
labs(x = "Sample size",y = "RMSE of truly non-null effects")
df %>%
pivot_longer(cols = `X-ING`:mash, names_to = "method") %>%
mutate(method=factor(method,levels = c("X-ING","mash"))) %>%
ggplot() +
geom_col(aes(x = factor(R2), y = value, group = method, fill = method),
position = "dodge",alpha=0.5,col="black",width=0.6) + # ,width=0.06
theme_classic() +
scale_fill_manual(values=c("red","purple"),name="Method") +
labs(x = "Sample size",y = "RMSE of truly non-null effects")
# Figure S6
df <- fread("ResultFigureS6.txt")
df %>%
pivot_longer(ALG1:hteqtl,names_to = "method",values_to = "time") %>%
mutate(method = factor(method, levels=c("ALG4","ALG2","mash","hteqtl","ALG1","metasoft"))) %>%
ggplot(aes(x = g, y = time, col = method))+
geom_line(size=1.5,alpha=0.7)+
scale_color_manual(values=c("red","orange","purple","skyblue","pink","black"),
labels = c(expression('X-ING'),expression('X-ING'[single-omics]),
'mash','MT-eQTL',expression('X-ING'[starting]),'Metasoft'),
name="Method")+
theme_classic()+
theme(legend.text.align = 0)+
labs(x = "Number of tested units", y = "Computation Time (second)")
# Figure S7
df <- fread("ResultFigureS7.txt")
df %>%
pivot_longer(ALG1:hteqtl,names_to = "method",values_to = "time") %>%
mutate(method = factor(method, levels=c("ALG4","ALG2","mash","hteqtl","ALG1","metasoft"))) %>%
ggplot(aes(x = k11+3, y = time*10, col = method))+
geom_line(size=1.5,alpha=0.7)+
scale_color_manual(values=c("red","orange","purple","skyblue","pink","black"),
labels = c(expression('X-ING'),expression('X-ING'[single-omics]),
'mash','MT-eQTL',expression('X-ING'[starting]),'Metasoft'),
name="Method")+
theme_classic()+
theme(legend.text.align = 0)+
coord_cartesian(ylim = c(0,5000))+
labs(x = "Number of contexts", y = "Computation Time (second)")
